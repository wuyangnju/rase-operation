# log with System.currentTimeMillis() under raw console(47/per ms)
# is a little bit faster than log under formated console(37/per ms). 
# format System.currentTimeMillis() under bash:
# date -d @$(echo "1342840676923" | sed 's/\([0-9]*\)\([0-9]\{3\}\)$/\1.\2/') +"%Y-%m-%d %H:%M:%S.%N" | sed 's/000000$//' 

#rootLogger will effect on every logger!
log4j.rootLogger = INFO, NULL
log4j.appender.NULL = org.apache.log4j.varia.NullAppender

log4j.logger.org.springframework = INFO, CONSOLE
log4j.logger.org.apache = INFO, CONSOLE
log4j.logger.httpclient = INFO, CONSOLE
log4j.logger.hk.ust = INFO, CONSOLE

log4j.appender.CONSOLE = org.apache.log4j.ConsoleAppender
log4j.appender.CONSOLE.encoding = UTF-8
log4j.appender.CONSOLE.layout = org.apache.log4j.PatternLayout
log4j.appender.CONSOLE.layout.ConversionPattern = %-12d{yyyy-MM-dd HH:mm:ss.S} [%t] %C %M%n%-5p %m%n
log4j.appender.CONSOLE.Target = System.out

log4j.appender.CONSOLE2 = org.apache.log4j.ConsoleAppender
log4j.appender.CONSOLE2.encoding = UTF-8
log4j.appender.CONSOLE2.layout = org.apache.log4j.PatternLayout
log4j.appender.CONSOLE2.layout.ConversionPattern = %m
log4j.appender.CONSOLE2.Target = System.out

# tracing delay time of sample retrieving and processing.
# example:
# 1342840676923,1342840677235	# retrieving, processing
# ...

log4j.logger.master.perf1 = INFO, MASTER_PERF1
log4j.appender.MASTER_PERF1 = org.apache.log4j.FileAppender
log4j.appender.MASTER_PERF1.encoding = UTF-8
log4j.appender.MASTER_PERF1.layout = org.apache.log4j.PatternLayout
log4j.appender.MASTER_PERF1.layout.ConversionPattern = %m
log4j.appender.MASTER_PERF1.BufferedIO = true
log4j.appender.MASTER_PERF1.BufferSize = 16192
log4j.appender.MASTER_PERF1.Append = false
log4j.appender.MASTER_PERF1.File = ${log.dir}/master_perf1.csv

# tracing sample number cumulatively and surviving count
# example:
# 1342840676923,0,100	# timestamp, sample count, surviving count
# 1342840677235,100,97
# 1342840677567,200,89
# 1342840677892,300,85
# ...

log4j.logger.master.perf2 = INFO, MASTER_PERF2
log4j.appender.MASTER_PERF2 = org.apache.log4j.FileAppender
log4j.appender.MASTER_PERF2.encoding = UTF-8
log4j.appender.MASTER_PERF2.layout = org.apache.log4j.PatternLayout
log4j.appender.MASTER_PERF2.layout.ConversionPattern = %m
log4j.appender.MASTER_PERF2.BufferedIO = true
log4j.appender.MASTER_PERF2.BufferSize = 16192
log4j.appender.MASTER_PERF2.Append = false
log4j.appender.MASTER_PERF2.File = ${log.dir}/master_perf2.csv

# tracing every sample value that master has processed
# example:
# 2,0.72	# alt id, sample value, simTime

log4j.logger.master.sample = INFO, MASTER_SAMPLE
log4j.appender.MASTER_SAMPLE = org.apache.log4j.FileAppender
log4j.appender.MASTER_SAMPLE.encoding = UTF-8
log4j.appender.MASTER_SAMPLE.layout = org.apache.log4j.PatternLayout
log4j.appender.MASTER_SAMPLE.layout.ConversionPattern = %m
log4j.appender.MASTER_SAMPLE.BufferedIO = true
log4j.appender.MASTER_SAMPLE.BufferSize = 16192
log4j.appender.MASTER_SAMPLE.Append = false
log4j.appender.MASTER_SAMPLE.File = ${log.dir}/master_sample.csv

# tracing sift operation # of three heaps, including elimination case if any
# example:
# 2,0,1			# 0 heap1 sift twice, heap2 no sift, heap3 sift once.
# 2,0,1,4,3,5	# 1 eliminate happens, and heap1 sift 4 times, heap2 3 times...
# ...

log4j.logger.master.sift = INFO, MASTER_SIFT
log4j.appender.MASTER_SIFT = org.apache.log4j.FileAppender
log4j.appender.MASTER_SIFT.encoding = UTF-8
log4j.appender.MASTER_SIFT.layout = org.apache.log4j.PatternLayout
log4j.appender.MASTER_SIFT.layout.ConversionPattern = %m
log4j.appender.MASTER_SIFT.BufferedIO = true
log4j.appender.MASTER_SIFT.BufferSize = 16192
log4j.appender.MASTER_SIFT.Append = false
log4j.appender.MASTER_SIFT.File = ${log.dir}/master_sift.csv

log4j.logger.master.elimation = INFO, MASTER_ELIMATION
log4j.appender.MASTER_ELIMATION = org.apache.log4j.FileAppender
log4j.appender.MASTER_ELIMATION.encoding = UTF-8
log4j.appender.MASTER_ELIMATION.layout = org.apache.log4j.PatternLayout
log4j.appender.MASTER_ELIMATION.layout.ConversionPattern = %m
log4j.appender.MASTER_ELIMATION.BufferedIO = true
log4j.appender.MASTER_ELIMATION.BufferSize = 16192
log4j.appender.MASTER_ELIMATION.Append = false
log4j.appender.MASTER_ELIMATION.File = ${log.dir}/master_elimation.csv

log4j.logger.master.elimation2 = INFO, MASTER_ELIMATION2
log4j.appender.MASTER_ELIMATION2 = org.apache.log4j.FileAppender
log4j.appender.MASTER_ELIMATION2.encoding = UTF-8
log4j.appender.MASTER_ELIMATION2.layout = org.apache.log4j.PatternLayout
log4j.appender.MASTER_ELIMATION2.layout.ConversionPattern = %m
log4j.appender.MASTER_ELIMATION2.BufferedIO = true
log4j.appender.MASTER_ELIMATION2.BufferSize = 16192
log4j.appender.MASTER_ELIMATION2.Append = false
log4j.appender.MASTER_ELIMATION2.File = ${log.dir}/master_elimation2.csv

log4j.logger.master.buf = INFO, MASTER_BUF
log4j.appender.MASTER_BUF = org.apache.log4j.FileAppender
log4j.appender.MASTER_BUF.encoding = UTF-8
log4j.appender.MASTER_BUF.layout = org.apache.log4j.PatternLayout
log4j.appender.MASTER_BUF.layout.ConversionPattern = %m
log4j.appender.MASTER_BUF.BufferedIO = true
log4j.appender.MASTER_BUF.BufferSize = 16192
log4j.appender.MASTER_BUF.Append = false
log4j.appender.MASTER_BUF.File = ${log.dir}/master_buf.csv

log4j.logger.ras.result = INFO, RAS_RESULT
log4j.appender.RAS_RESULT = org.apache.log4j.FileAppender
log4j.appender.RAS_RESULT.encoding = UTF-8
log4j.appender.RAS_RESULT.layout = org.apache.log4j.PatternLayout
log4j.appender.RAS_RESULT.layout.ConversionPattern = %m
log4j.appender.RAS_RESULT.File = ${log.dir}/ras_result.csv

# tracing delay time of retrieving, simulation and submission, respectively.
# example:
# 1342840676923,1342840677235,1342840677567	# retrieving, simulation, submission
# ...

log4j.logger.slave.perf1 = INFO

# tracing sample number, cumulatively
# example:
# 1342840676923,0
# 1342840677235,100
# 1342840677567,200
# 1342840677892,300
# ...

log4j.logger.slave.perf2 = INFO
